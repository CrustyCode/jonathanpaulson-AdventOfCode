#include <vector>
#include <set>
#include <cassert>
#include <tuple>
#include <unordered_map>
#include <iostream>
#include <map>
#include <utility>
using namespace std;
using ll = int64_t;
using pll = pair<ll,ll>;

vector<ll> R;
vector<vector<pll>> E;

ll best = 0;
using Key = tuple<ll,ll,ll,bool>;
map<Key,ll> DP;
ll f(ll p1, ll U, ll time, bool me) {
  if(time == 0) {
    return me ? f(0,U,26,false) : 0LL;
  }

  auto key = make_tuple(p1,U,time,me);
  if(DP.count(key)==1) {
    return DP[key];
  }

  ll ans = 0;
  bool no_p1 = ((U & (1LL<<p1)) == 0);
  if(no_p1 && R[p1]>0) {
    ll newU = U | (1LL<<p1);
    assert(newU > U);
    ans = max(ans, (time-1)*R[p1] + f(p1, newU, time-1, me));
  }
  for(auto& [d,y] : E[p1]) {
    assert(d==1);
    ans = max(ans, f(y, U, time-1, me));
  }
  DP[key] = ans;
  /*if(DP.size() % 100000 == 0) {
    //cerr << DP.size() << " best=" << best << endl;
  }*/
  return ans;
}

int main() {
R = vector<ll>{0,0,0,0,0,12,0,0,8,0,0,0,16,0,0,15,0,21,0,0,0,0,20,0,0,23,0,0,9,25,0,18,0,0,0,0,0,0,10,3,0,22,0,0,0,0,11,4,0,0};
E = vector<vector<pll>>{{{1,16},{1,26},{1,13},{1,10}},{{1,22},{1,2}},{{1,41},{1,1}},{{1,39},{1,37}},{{1,26},{1,39}},{{1,48},{1,23},{1,21}},{{1,29},{1,15}},{{1,39},{1,43}},{{1,20},{1,30},{1,11},{1,34},{1,10}},{{1,20},{1,47}},{{1,0},{1,8}},{{1,31},{1,8}},{{1,40}},{{1,0},{1,38}},{{1,18},{1,38}},{{1,6}},{{1,0},{1,47}},{{1,35},{1,44}},{{1,14},{1,29}},{{1,46},{1,33}},{{1,9},{1,8}},{{1,5},{1,31}},{{1,1},{1,37},{1,32}},{{1,49},{1,5}},{{1,36},{1,38}},{{1,45},{1,44}},{{1,0},{1,4}},{{1,47},{1,29}},{{1,40},{1,48}},{{1,27},{1,18},{1,6}},{{1,39},{1,8}},{{1,21},{1,33},{1,11}},{{1,38},{1,22}},{{1,19},{1,31}},{{1,46},{1,8}},{{1,46},{1,17}},{{1,24},{1,39}},{{1,3},{1,22}},{{1,14},{1,42},{1,13},{1,32},{1,24}},{{1,4},{1,3},{1,7},{1,36},{1,30}},{{1,28},{1,12}},{{1,2}},{{1,38},{1,47}},{{1,47},{1,7}},{{1,17},{1,25}},{{1,25},{1,46}},{{1,35},{1,34},{1,49},{1,45},{1,19}},{{1,16},{1,43},{1,27},{1,9},{1,42}},{{1,28},{1,5}},{{1,46},{1,23}}};
  //R = vector<ll>{0,13,2,20,3,0,0,22,0,21};
//E = vector<vector<pll>>{{{1,3},{1,8},{1,1}},{{1,2},{1,0}},{{1,3},{1,1}},{{1,2},{1,0},{1,4}},{{1,5},{1,3}},{{1,4},{1,6}},{{1,5},{1,7}},{{1,6}},{{1,0},{1,9}},{{1,8}}};
  //DP = vector<ll>(1e8, -1); //map<Key, ll>{};
  DP = map<Key, ll>{};
  ll p1 = f(0,0,30,false);
  ll p2 = f(0,0,26,true);
  cout << p1 << endl;
  cout << p2 << endl;
}
